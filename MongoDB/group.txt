 // group stage
 db.practice.aggregate([{
 $group: {
           _id: {
               age: "$age",
 email: "$email"
 }
}}
])

// accumulator, $sort, $limit

 db.practice.aggregate([{
      {$match: {age: {$gt: 18}}},
  // group stage
  {
  $group: {
            _id: "$salary",
  persons: { $sum: 1 } // accumulator
        }
    },
    {
        // project stage
        $project: {
            _id: 0,
            salary: "$\_id",
  persons: 1,
  }
  },
  {
  // sort stage
   $sort: {salary: 1}
  },
  {
  $limit: 3
  }
 }
])

// accumulator operator using aggregation

db.practice.aggregate([
    // group stage
   { $group: {
       _id: null,
       count: {$sum: "$salary"},
       maxSalary: {$max: "$salary"},
       minSalary: {$min: "$salary"},
       avgSalary: {$avg: "$salary"}
   }},
   {
       $project: {
           count: 1,
           maxSalary: 1,
           minSalary: 1,
           avgSalary: 1,
           salaryRange: {$subtract: [ "$maxSalary", "$minSalary" ]}
       }
   }
])

// $unwind

db.practice.aggregate([
    {
        // unwind stage
        $unwind: "$friends"
    },
    {
        $group: {
            _id: "$friends",
            count: { $sum: 1 }
        },
    }
])

